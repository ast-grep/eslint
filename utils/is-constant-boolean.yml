id: is-constant-boolean
language: TypeScript
rule:
  any:
    - matches: constantFalse
    - matches: constantTrue
    - kind: parenthesized_expression
      has:
        matches: is-constant-boolean
    - kind: augmented_assignment_expression
      matches: isLogicalIdentity
    - kind: assignment_expression
      has:
        field: right
        matches: is-constant-boolean
    - kind: sequence_expression
      has:
        field: right
        matches: is-constant-boolean
    - kind: spread_element
      has:
        matches: is-constant-boolean
    - kind: unary_expression
      any:
        - has:
            field: operator
            regex: void
        - has:
            field: operator
            regex: typeof
        - has:
            field: argument
            matches: is-constant
          not:
            has:
              field: operator
              regex: '!'
        - all:
            - has:
                field: operator
                regex: '!'
            - has:
                field: argument
                matches: is-constant-boolean
    - kind: binary_expression
      not:
        has:
          field: operator
          regex: '&&|\|\||\?\?'
      all:
        - has:
            field: left
            matches: is-constant
        - has:
            field: right
            matches: is-constant
        - not:
            has:
              field: operator
              regex: 'in'
    - kind: binary_expression
      has:
        field: operator
        regex: '&&|\|\||\?\?'
      matches: isLogicalIdentity
    - pattern: Boolean()
    - pattern: Boolean($A)
      has:
        matches: is-constant-boolean
        has:
          field: argument
          has:
            matches: is-constant-boolean

utils:
  isLogicalIdentity:
    any:
      - all:
        - has:
            field: left
            matches: is-constant-boolean
        - has:
            field: right
            matches: is-constant-boolean
      - all:
        - has:
            field: operator
            regex: '\|\|'
        - has:
            field: left
            matches: constantTrue
      # right shortcircuit only in is-constant-boolean
      - all:
        - has:
            field: operator
            regex: '&&'
        - has:
            field: right
            matches: constantFalse

  constantFalse:
    any:
      - kind: 'false'
      - kind: undefined
      - kind: 'null'
      - pattern: '0'
      - pattern: '""'
      - pattern: "''"
      - pattern: '``'
      - kind: unary_expression
        has:
          field: operator
          regex: void
  constantTrue:
    any:
      - kind: 'true'
      - kind: regex
      - kind: arrow_function
      - kind: function
      - kind: object
      - kind: class
      - kind: array
      - kind: new_expression
      - kind: number
        not:
          pattern: '0'
      - kind: string
        not:
          any:
            - pattern: '""'
            - pattern: "''"
      - kind: template_string
        not:
          regex: '`\$\{.+?\}`'
